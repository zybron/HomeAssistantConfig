- id: main_balcony_open
  alias: "Main Balcony Open"
  trigger:
    - platform: state
      entity_id: binary_sensor.main_balcony_sensor
      to: "on"
      for: "00:05:00"
  condition:
    alias: "Thermostat_not_off"
    condition: not
    conditions:    
      - condition: state
        entity_id: climate.thermostat
        state: "off"
  action:
    - service: climate.turn_off
      target:
        entity_id: climate.thermostat

- id: main_balcony_close
  alias: "Main Balcony Close"
  trigger:
    - platform: state
      entity_id: binary_sensor.main_balcony_sensor
      from: "on"
      to: "off"
  condition:
    - alias: "thermostat_on"
      condition: state
      entity_id: climate.thermostat
      state: "off"
  action:
    - service: climate.turn_on
      target:
        entity_id: climate.thermostat

- id: battery_level_low_daily_notification
  alias: "Battery Level Low Daily Notification"
  trigger:
    - platform: time
      at: "08:00:00"
  action:
    choose:
    - conditions:
        - condition: numeric_state
          entity_id: sensor.front_door_sensor_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The front door sensor's battery is low. Current level is {{ states.sensor.front_door_sensor_batter_level }}."
            title: "Front Door Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.main_balcony_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The main balcony door sensor's battery is low. Current level is {{ states.sensor.main_balcony_battery_level }}."
            title: "Main Balcony Door Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.motion_sensor_entryway_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The entryway motion sensor's battery is low. Current level is {{ states.sensor.motion_sensor_entryway_battery_level }}."
            title: "Entryway Motion Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.door_lock_batteries_front_door
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The entryway motion sensor's battery is low. Current level is {{ states.sensor.door_lock_batteries_front_door }}."
            title: "Entryway Motion Sensor"

- id: "turn_on_entryway_lights_automation"
  alias: "Turn On Entryway Lights"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_entryway_motion_sensor_status
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.front_door_sensor_door_state
      from: "off"
      to: "on"
  action:
    - service: script.turn_off
      target:
        entity_id: script.turn_off_entryway_lights
    - service: script.turn_on
      target:
        entity_id: script.turn_on_entryway_lights

- id: "turn_off_entryway_lights_automation"
  alias: "Turn Off Entryway Lights"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_entryway_motion_sensor_status
      from: "on"
      to: "off"
    - platform: state
      entity_id: binary_sensor.front_door_sensor_door_state
      from: "on"
      to: "off"
  action:
    - service: script.turn_on
      target:
        entity_id: script.turn_off_entryway_lights

- id: "watch_config_for_yaml_changes"
  alias: "Watch Config for Yaml changes"
  trigger:
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: created
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: deleted
  action:
    - service: notify.telegram_nathan
      data:
        message: "Home Assistant config has changed."
        title: "Home Assistant Config"
    - service: homeassistant.restart

- id: "front_door_unlocked"
  alias: "Front Door unlocked"
  trigger:
    - platform: state
      entity_id: lock.front_door_lock
      from: "locked"
      to: "unlocked"
      for: "00:03:00"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The front door is unlocked."
        title: "Front Door Lock"
    - service: notify.telegram_nathan
      data:
        message: "The front door is unlocked."
        title: "Front Door Lock"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.living_room
          - media_player.master_bedroom_wifi
        cache: true
        message: "The front door is unlocked."
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.front_door_sensor_door_state
          to: "off"
    - service: lock.lock
      target:
        entity_id: lock.front_door_lock

- id: "front_door_locked"
  alias: "Front Door locked"
  trigger:
    - platform: state
      entity_id: lock.front_door_lock
      from: "unlocked"
      to: "locked"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The front door is locked."
        title: "Front Door Lock"
    - service: notify.telegram_nathan
      data:
        message: "The front door is locked."
        title: "Front Door Lock"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.living_room
          - media_player.master_bedroom_wifi
        cache: true
        message: "The front door is locked."

- id:                    PullNewConfig
  alias:                 'Pull New Config'
  initial_state:         on
  trigger:
  - platform:            state
    entity_id:           sensor.zybron_homeassistantconfig_last_build_state
    to:                  'passed'
  action:
    - service: notify.telegram_nathan
      data:
        title: 'Pull Config'
        message: 'Pulling new config from GitHub.'
    - service: shell_command.pull_config
    
# Notifications
- id:                    HomeAssistantStartup
  alias:                 HomeAssistantStartup
  initial_state:         on
  trigger:
  - event:               start
    platform:            homeassistant
  action:
  - service: notify.telegram_nathan
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is starting.'
  - service: notify.telegram_erin
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is starting.'

- id:                    HomeAssistantShutdown
  alias:                 HomeAssistantShutdown
  initial_state:         on
  trigger:
  - event:               shutdown
    platform:            homeassistant
  action:
  - service: notify.telegram_nathan
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is shutting down.'
  - service: notify.telegram_erin
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is shutting down.'

- id:                    HealthCheckStatusUpdate
  alias:                 'Health Check Status Update'
  initial_state:         on
  trigger:
  - platform:            time_pattern
    minutes:             '/5'
    seconds:             '0'
  action:
    - service:           shell_command.health_check

- id: 'TelegramTesting'
  alias: 'Telegram Testing'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/test'
  action:
    - service: notify.telegram_pandahome
      data:
        title: 'Test Title'
        message: 'Test message.'
        data:
          inline_keyboard:
            - 'Test:/do_test'

- id: 'TelegramTestingCallback'
  alias: 'Telegram Testing Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_test'
  action:
    - service: notify.telegram_pandahome
      data:
        title: 'Success Title'
        message: 'Success message.'