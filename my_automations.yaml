- id: main_balcony_open
  alias: "Main Balcony Open"
  trigger:
    - platform: state
      entity_id: binary_sensor.main_balcony_sensor
      to: "on"
      for: "00:05:00"
  condition:
    alias: "Thermostat_not_off"
    condition: not
    conditions:    
      - condition: state
        entity_id: climate.thermostat
        state: "off"
  action:
    - service: climate.turn_off
      target:
        entity_id: climate.thermostat

- id: main_balcony_close
  alias: "Main Balcony Close"
  trigger:
    - platform: state
      entity_id: binary_sensor.main_balcony_sensor
      from: "on"
      to: "off"
  condition:
    - alias: "thermostat_on"
      condition: state
      entity_id: climate.thermostat
      state: "off"
  action:
    - service: climate.turn_on
      target:
        entity_id: climate.thermostat

- id: battery_level_low_daily_notification
  alias: "Battery Level Low Daily Notification"
  trigger:
    - platform: time
      at: "08:00:00"
  action:
    choose:
    - conditions:
        - condition: numeric_state
          entity_id: sensor.front_door_sensor_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The front door sensor's battery is low. Current level is {{ states.sensor.front_door_sensor_battery_level }}."
            title: "Front Door Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.main_balcony_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The main balcony door sensor's battery is low. Current level is {{ states.sensor.main_balcony_battery_level }}."
            title: "Main Balcony Door Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.motion_sensor_entryway_battery_level
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The entryway motion sensor's battery is low. Current level is {{ states.sensor.motion_sensor_entryway_battery_level }}."
            title: "Entryway Motion Sensor"
    - conditions:
        - condition: numeric_state
          entity_id: sensor.door_lock_batteries_front_door
          below: 25
          above: 0
      sequence:
        - service: notify.telegram_nathan
          data:
            message_template: "The entryway motion sensor's battery is low. Current level is {{ states.sensor.door_lock_batteries_front_door }}."
            title: "Entryway Motion Sensor"

- id: "turn_on_entryway_lights_automation"
  alias: "Turn On Entryway Lights"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_entryway_motion_sensor_status
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.front_door_sensor_door_state
      from: "off"
      to: "on"
  action:
    - service: script.turn_off
      target:
        entity_id: script.turn_off_entryway_lights
    - service: script.turn_on
      target:
        entity_id: script.turn_on_entryway_lights

- id: "front_door_open_notification"
  alias: "Front Door Open Notification"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door_sensor_door_state
      from: "off"
      to: "on"
      for:
        minutes: 3
  action:
    - service: notify.telegram_nathan
      data:
        message: "The front door was left open."
        title: "Front Door"
    - service: notify.telegram_erin
      data:
        message: "The front door was left open."
        title: "Front Door"
    - service: notify.shield
      data:
        message: "The front door was left open."
        title: "Front Door"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.master_bedroom_wifi
        cache: true
        message: "The front door was left open."

- id: "turn_off_entryway_lights_automation"
  alias: "Turn Off Entryway Lights"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_entryway_motion_sensor_status
      from: "on"
      to: "off"
    - platform: state
      entity_id: binary_sensor.front_door_sensor_door_state
      from: "on"
      to: "off"
  action:
    - service: script.turn_on
      target:
        entity_id: script.turn_off_entryway_lights

- id: "watch_config_for_yaml_changes"
  alias: "Watch Config for Yaml changes"
  trigger:
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: created
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
    - platform: event
      event_type: folder_watcher
      event_data:
        event_type: deleted
  action:
    - service: notify.telegram_nathan
      data:
        message: "Home Assistant config has changed."
        title: "Home Assistant Config"
    - delay: "00:01:00"
    - service: homeassistant.restart

- id: "front_door_unlocked"
  alias: "Front Door unlocked"
  trigger:
    - platform: state
      entity_id: lock.front_door_lock
      from: "locked"
      to: "unlocked"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The front door is unlocked."
        title: "Front Door Lock"
    - service: notify.telegram_erin
      data:
        message: "The front door is unlocked."
        title: "Front Door Lock"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.master_bedroom_wifi
        cache: true
        message: "The front door is unlocked."
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.front_door_sensor_door_state
          to: "off"
    - service: lock.lock
      target:
        entity_id: lock.front_door_lock

- id: "front_door_locked"
  alias: "Front Door locked"
  trigger:
    - platform: state
      entity_id: lock.front_door_lock
      from: "unlocked"
      to: "locked"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The front door is locked."
        title: "Front Door Lock"
    - service: notify.telegram_erin
      data:
        message: "The front door is locked."
        title: "Front Door Lock"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.master_bedroom_wifi
        cache: true
        message: "The front door is locked."

- id:                    PullNewConfig
  alias:                 'Pull New Config'
  initial_state:         on
  trigger:
  - platform:            state
    entity_id:           sensor.zybron_homeassistantconfig_last_build_state
    to:                  'passed'
  action:
    - service: notify.telegram_nathan
      data:
        title: 'Pull Config'
        message: 'Pulling new config from GitHub.'
    - service: shell_command.pull_config
    
# Notifications
- id:                    HomeAssistantStartup
  alias:                 HomeAssistantStartup
  initial_state:         on
  trigger:
  - event:               start
    platform:            homeassistant
  action:
  - service: notify.telegram_nathan
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is starting.'
  - service: notify.telegram_erin
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is starting.'

- id:                    HomeAssistantShutdown
  alias:                 HomeAssistantShutdown
  initial_state:         on
  trigger:
  - event:               shutdown
    platform:            homeassistant
  action:
  - service: notify.telegram_nathan
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is shutting down.'
  - service: notify.telegram_erin
    data:
      title: 'Home Assistant'
      message: 'Home Assistant is shutting down.'

- id:                    HealthCheckStatusUpdate
  alias:                 'Health Check Status Update'
  initial_state:         on
  trigger:
  - platform:            time_pattern
    minutes:             '/5'
    seconds:             '0'
  action:
    - service:           shell_command.health_check

- id: 'TelegramTesting'
  alias: 'Telegram Testing'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/test'
  action:
    - service: notify.telegram_nathan
      data:
        title: 'Test Title'
        message: 'Test message.'
        data:
          inline_keyboard:
            - 'Test:/do_test'

- id: 'TelegramTestingCallback'
  alias: 'Telegram Testing Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_test'
  action:
    - service: notify.telegram_nathan
      data:
        title: 'Success Title'
        message: 'Success message.'

- id: "open_garage_door_leaving"
  alias: "Open Garage Door Leaving"
  trigger:
    - platform: state
      entity_id: binary_sensor.car_on
      from: "off"
      to: "on"
  action:
    - service: cover.open_cover
      target:
        entity_id: cover.garage_door

- id: "open_garage_door_arriving"
  alias: "Open Garage Door Arriving"
  trigger:
    - platform: state
      entity_id: person.erin
      from: "not_home"
      to: "home"
    - platform: state
      entity_id: person.nathan
      from: "not_home"
      to: "home"
  condition:
    - condition: state
      entity_id: binary_sensor.car_parked
      state: "off"
  action:
    - service: cover.open_cover
      target:
        entity_id: cover.garage_door

- id: "open_garage_door_notification"
  alias: "Open Garage Door Notification"
  trigger:
    - platform: state
      entity_id: cover.garage_door
      to: "open"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The garage door is open."
        title: "Garage Door"
        data:
          inline_keyboard: 
            - "Close:/do_close_garage"
    - service: notify.telegram_erin
      data:
        message: "The garage door is open."
        title: "Garage Door"
        data:
          inline_keyboard: 
            - "Close:/do_close_garage"
    - service: notify.shield
      data:
        message: "The garage door is open."
        title: "Garage Door"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.master_bedroom_wifi
        cache: true
        message: "The garage door is open."

- id: "close_garage_door"
  alias: "Close Garage Door"
  trigger:
    - platform: state
      entity_id: cover.garage_door
      to: "open"
    - platform: state
      entity_id: input_boolean.hold_garage_open
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: cover.garage_door
      state: "open"
  action:
    - choose:
      - conditions:
          - condition: template
            value_template: "{{  trigger.entity_id == 'input_boolean.hold_garage_open' }}"
        sequence:
          - service: cover.close_cover
            target:
              entity_id: cover.garage_door
      default:
        - delay: "00:05:00"
        - service: cover.close_cover
          target:
            entity_id: cover.garage_door

- id: "close_garage_door_notification"
  alias: "Close Garage Door Notification"
  trigger:
    - platform: state
      entity_id: cover.garage_door
      from: "open"
      to: "closed"
  action:
    - service: notify.telegram_nathan
      data:
        message: "The garage door is closed."
        title: "Garage Door"
        data:
          inline_keyboard: 
            - "Open:/do_open_garage"
    - service: notify.telegram_erin
      data:
        message: "The garage door is closed."
        title: "Garage Door"
        data:
          inline_keyboard: 
            - "Open:/do_open_garage"
    - service: tts.cloud_say
      data:
        entity_id: 
          - media_player.entryway_wifi
          - media_player.kitchen_display
          - media_player.master_bedroom_wifi
        cache: true
        message: "The garage door is closed."

- id: "turn_on_cabinet_lights"
  alias: "Turn on Cabinet Lights"
  trigger:
    - platform: time
      at: "07:00:00"
  action:
    - alias: "Choose color by time of year"
      choose:
      - conditions:
          - alias: "October"
            condition: template
            value_template: "{{  now().month == 10 }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.cabinets
            data:
              rgb_color: [255,40,0]
      - conditions:
          - alias: "December"
            condition: template
            value_template: "{{  now().month == 12 }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.cabinets
            data:
              rgb_color: [0,0,255]
      default:
        - service: light.turn_on
          target:
            entity_id: light.cabinets
          data:
            rgb_color: [0,255,255]

- id: "turn_off_cabinet_lights"
  alias: "Turn off Cabinet Lights"
  trigger:
    - platform: time
      at: "22:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.hosting_mode
      state: "off"
  action:
    - service: light.turn_off
      target:
        entity_id: light.cabinets

- id: "turn_off_cabinet_lights_guests"
  alias: "Turn off Cabinet Lights Guests"
  trigger:
    - platform: time
      at: "00:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.hosting_mode
      state: "on"
  action:
    - service: light.turn_off
      target:
        entity_id: light.cabinets
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.hosting_mode

- id: "turn_on_living_room_light"
  alias: "Turn on Living Room Light"
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:45:00"
  action:
    - service: light.turn_on
      target:
        entity_id: light.living_room_switch
      data:
        transition: 60

- id: "turn_off_living_room_light_weekdays"
  alias: "Turn off Living Room Light Weekdays"
  trigger:
    - platform: time
      at: "22:00:00"
  condition:
    - alias: "Weekdays"
      condition: template
      value_template: "{{ now().weekday != 'Friday' and now().weekday != 'Saturday' }}"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.living_room_occupancy
          from: "on"
          to: "off"
    - service: light.turn_off
      target:
        entity_id: light.living_room_switch
      data:
        transition: 60

- id: "turn_off_living_room_light_weekends"
  alias: "Turn off Living Room Light Weekends"
  trigger:
    - platform: time
      at: "23:00:00"
  condition:
    - alias: "Weekend"
      condition: template
      value_template: "{{ now().weekday == 'Friday' or now().weekday == 'Saturday' }}"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.living_room_occupancy
          from: "on"
          to: "off"
    - service: light.turn_off
      target:
        entity_id: light.living_room_switch
      data:
        transition: 60

- id: 'telegram_start_vacuum_callback'
  alias: 'Start Vacuum Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/start_vacuum'
  action:
    - service: vacuum.toggle
      target:
        entity_id: vacuum.roombie
    - service: telegram_bot.answer_callback_query
      data:
        message: "Starting Vacuum"
        callback_query_id: "{{ trigger.event.data.id }}"
    - service: telegram_bot.send_message
      data:
        message: "Roombie is starting."
        title: "Roombie"
        chat_id: "{{ trigger.event.data.chat_id }}"
        data:
          inline_keyboard:
          - "Stop:/stop_vacuum"
          - "Locate:/locate_vacuum,Return Home:/home_vacuum"

- id: 'telegram_stop_vacuum_callback'
  alias: 'Stop Vacuum Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/stop_vacuum'
  action:
    - service: vacuum.toggle
      target:
        entity_id: vacuum.roombie
    - service: telegram_bot.answer_callback_query
      data:
        message: "Stopping Vacuum"
        callback_query_id: "{{ trigger.event.data.id }}"
    - service: telegram_bot.send_message
      data:
        message: "Roombie is stopping."
        title: "Roombie"
        chat_id: "{{ trigger.event.data.chat_id }}"
        data:
          inline_keyboard: 
          - "Start:/start_vacuum"
          - "Locate:/locate_vacuum,Return Home:/home_vacuum"

- id: 'telegram_locate_vacuum_callback'
  alias: 'Locate Vacuum Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/locate_vacuum'
  action:
    - service: vacuum.locate
      target:
        entity_id: vacuum.roombie
    - service: telegram_bot.answer_callback_query
      data:
        message: "Locating Vacuum"
        callback_query_id: "{{ trigger.event.data.id }}"
    - service: telegram_bot.send_message
      data:
        message: "Roombie is announcing it's location."
        title: "Roombie"
        chat_id: "{{ trigger.event.data.chat_id }}"
        data:
          inline_keyboard: 
          - "Stop:/stop_vacuum,Start:/start_vacuum"
          - "Locate:/locate_vacuum,Return Home:/home_vacuum"

- id: 'telegram_go_home_vacuum_callback'
  alias: 'Vacuum Go Home Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/home_vacuum'
  action:
    - service: vacuum.return_to_base
      target:
        entity_id: vacuum.roombie
    - service: telegram_bot.answer_callback_query
      data:
        message: "Sending Home"
        callback_query_id: "{{ trigger.event.data.id }}"
    - service: telegram_bot.send_message
      data:
        message: "Roombie is returning home."
        title: "Roombie"
        chat_id: "{{ trigger.event.data.chat_id }}"
        data:
          inline_keyboard: 
          - "Stop:/stop_vacuum,Start:/start_vacuum"
          - "Locate:/locate_vacuum"

- id: "vacuum_starting_notification"
  alias: "Vacuum Starting Notification"
  trigger:
    - platform: state
      entity_id: vacuum.roombie
      to: "cleaning"
  action:
    - service: notify.telegram_nathan
      data:
        message: "Roombie is starting to vacuum."
        title: "Roombie"
        data:
          inline_keyboard: 
          - "Stop:/stop_vacuum"
          - "Locate:/locate_vacuum,Return Home:/home_vacuum"
    - service: notify.telegram_erin
      data:
        message: "Roombie is starting to vacuum"
        title: "Roombie"
        data:
          inline_keyboard: 
          - "Stop:/stop_vacuum"
          - "Locate:/locate_vacuum,Return Home:/home_vacuum"

- id: 'telegram_open_garage_callback'
  alias: 'Open Garage Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_open_garage'
  action:
    - service: cover.open_cover
      target:
        entity_id: cover.garage_door
    - service: telegram_bot.answer_callback_query
      data:
        message: "Opening Garage Door"
        callback_query_id: "{{ trigger.event.data.id }}"

- id: 'telegram_close_garage_callback'
  alias: 'Close Garage Telegram Callback'
  initial_state: on
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_close_garage'
  action:
    - service: cover.close_cover
      target:
        entity_id: cover.garage_door
    - service: telegram_bot.answer_callback_query
      data:
        message: "Closing Garage Door"
        callback_query_id: "{{ trigger.event.data.id }}"

- id: "erin_away"
  alias: "Erin Away"
  trigger:
    - platform: state
      entity_id: person.erin
      from: "home"
      to: "not_home"
      for: "00:05:00"
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.erin_away

- id: "nathan_away"
  alias: "Nathan Away"
  trigger:
    - platform: state
      entity_id: person.nathan
      from: "home"
      to: "not_home"
      for: "00:05:00"
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.nathan_away

- id: "erin_arrives"
  alias: "Erin Arrives"
  trigger:
    - platform: state
      entity_id: person.erin
      from: "not_home"
      to: "home"
  condition:
    - condition: state
      entity_id: input_boolean.erin_away
      state: "on"
  action:
    - choose:
      - conditions:
          - condition: state
            entity_id: binary_sensor.car_parked
            state: "off"
        sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.garage_door
          - service: notify.telegram_nathan
            data:
              message: "Erin is arriving home."
              title: "Erin"
          - service: tts.cloud_say
            data:
              entity_id: 
                - media_player.entryway_wifi
                - media_player.kitchen_display
                - media_player.master_bedroom_wifi
              cache: true
              message: "Erin is arriving home."
          - service: script.turn_on
            target:
              entity_id: script.turn_on_entryway_lights
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.erin_away
      default:
        - service: notify.telegram_nathan
          data:
            message: "Erin is arriving home."
            title: "Erin"
        - service: tts.cloud_say
          data:
            entity_id: 
              - media_player.entryway_wifi
              - media_player.kitchen_display
              - media_player.master_bedroom_wifi
            cache: true
            message: "Erin is arriving home."
        - service: script.turn_on
          target:
            entity_id: script.turn_on_entryway_lights
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.erin_away

- id: "nathan_arrives"
  alias: "Nathan Arrives"
  trigger:
    - platform: state
      entity_id: person.nathan
      from: "not_home"
      to: "home"
  condition:
    - condition: state
      entity_id: input_boolean.nathan_away
      state: "on"
  action:
    - choose:
      - conditions:
          - condition: state
            entity_id: binary_sensor.car_parked
            state: "off"
        sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.garage_door
          - service: notify.telegram_erin
            data:
              message: "Nathan is arriving home."
              title: "Nathan"
          - service: tts.cloud_say
            data:
              entity_id: 
                - media_player.entryway_wifi
                - media_player.kitchen_display
                - media_player.master_bedroom_wifi
              cache: true
              message: "Nathan is arriving home."
          - service: script.turn_on
            target:
              entity_id: script.turn_on_entryway_lights
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.nathan_away
      default:
        - service: notify.telegram_erin
          data:
            message: "Nathan is arriving home."
            title: "Nathan"
        - service: tts.cloud_say
          data:
            entity_id: 
              - media_player.entryway_wifi
              - media_player.kitchen_display
              - media_player.master_bedroom_wifi
            cache: true
            message: "Nathan is arriving home."
        - service: script.turn_on
          target:
            entity_id: script.turn_on_entryway_lights
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.nathan_away

- id: "hosting_mode_on"
  alias: "Hosting Mode On"
  trigger:
    - platform: state
      entity_id: input_boolean.hosting_mode
      from: "off"
      to: "on"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: climate.thermostat
          state: "off" 
  action:
    - service: climate.set_temperature
      target:
        entity_id: climate.thermostat
      data:
        target_temp_high: 75
        target_temp_low: 68

- id: "hosting_mode_off"
  alias: "Hosting Mode Off"
  trigger:
    - platform: state
      entity_id: input_boolean.hosting_mode
      from: "on"
      to: "off"
  action:
    - service: ecobee.resume_program
      target:
        entity_id: climate.thermostat
      data:
        resume_all: true

- id: "reset_hosting_mode"
  alias: "Reset Hosting Mode"
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.hosting_mode

- id: "grandfather_clock"
  alias: "Granfather Clock"
  trigger:
    - platform: time_pattern
      hours: "/1"
      minutes: "0"
      seconds: "0"
  condition:
    - condition: time
      after: "08:00:00"
      before: "22:00:00"
  action:
    - service: media_player.play_media
      target:
        entity_id: media_player.kitchen_display
      data:
        media_content_type: "Music"
        media_content_id: "https://ha.zybron.com/local/grandfather-clock-chime-{{ now().strftime('%I') }}.mp3"

- id: "chia_sensors_notification"
  alias: "Chia Sensors Notification"
  mode: parallel
  trigger:
    - platform: mqtt
      topic: crypto/btcgreen
    - platform: mqtt
      topic: crypto/cactus
    - platform: mqtt
      topic: crypto/chia
    - platform: mqtt
      topic: crypto/cryptodoge
    - platform: mqtt
      topic: crypto/flax
    - platform: mqtt
      topic: crypto/flora
    - platform: mqtt
      topic: crypto/hddcoin
    - platform: mqtt
      topic: crypto/nchain
    - platform: mqtt
      topic: crypto/stor
    - platform: mqtt
      topic: crypto/staicoin
  condition:
    - condition: template
      value_template: >
        "{{  trigger.payload_json.type == 'USER' or 
        trigger.payload_json.type == 'DAILY_STATS' or 
        not (trigger.payload_json.msg is search('harvester', ignorecase=true)) }}"
  action:
    - service: notify.telegram_nathan
      data:
        message: "{{ trigger.payload_json.msg }}"
        title: "{{ trigger.topic | title }} Notification"

- id: "litter_box_full_start_timer"
  alias: "Litter Box Full Start Timer"
  trigger:
    - platform: numeric_state
      entity_id: sensor.stinky_waste_drawer
      above: 94
  condition:
    - condition: state
      entity_id: timer.stinky_wait_timer
      state: "idle"
  action:
    - service: script.litterbox_timer_start

- id: "litter_box_timer_finished"
  alias: "Litter Box Timer Finished"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.stinky_wait_timer
  condition:
    - condition: numeric_state
      entity_id: sensor.stinky_waste_drawer
      above: 94
  action:
    - service: script.litterbox_timer_elapsed
    
- id: "litter_box_full_stop_timer"
  alias: "Litter Box Full Stop Timer"
  trigger:
    - platform: numeric_state
      entity_id: sensor.stinky_waste_drawer
      below: 95
  action:
    - service: timer.cancel
      data:
        entity_id: timer.stinky_wait_timer
    - service: input_number.set_value
      data:
        entity_id: input_number.last_stinky_timer_duration
        value: 60