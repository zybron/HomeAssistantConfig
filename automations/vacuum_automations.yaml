- id:                DailyVacuumStart
  alias:             'Daily Vacuum Start'
  initial_state:     on
  trigger:
  - platform:        time
    at:              '11:00:00'
  action:
    - service:       vacuum.turn_on
      entity_id:     vacuum.xiaomi_vacuum_cleaner

- id:                VacuumStartNotification
  alias:             'Vacuum Start Notification'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       vacuum.xiaomi_vacuum_cleaner
    to:              'on'
  action:
  - service:         notify.html5_notify
    data_template:
      message:      '{{ states.sensor.date__time.state }}: Mi Mi has started cleaning.'
    data:
      data:
        actions:
          - action:  'vacuum_stop_cleaning'
            title:   'Stop Cleaning'
        tag:         vacuum_notification

- id:                VacuumStopCleaningActionClicked
  alias:             'Vacuum Stop Cleaning Action Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_stop_cleaning
  action:
  - service:         vacuum.turn_off
    entity_id:       vacuum.xiaomi_vacuum_cleaner

- id:                VacuumStopNotification
  alias:             'Vacuum Stop Notification'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       vacuum.xiaomi_vacuum_cleaner
    to:              'off'
  action:
  - service:         notify.html5_notify
    data_template:
      message:      '{{ states.sensor.date__time.state }}: Mi Mi has stopped cleaning.'
    data:
      data:
        tag:         vacuum_notification

- id:                VacuumErrorNotification
  alias:             'Vacuum Error Notification'
  initial_state:     on
  trigger:
  - platform:        template
    value_template:  >-
      {% if is_state('sensor.vacuum_cleaner_error_sensor', 'No Error') %}
        false
      {% else %}
        true
      {% endif %}
  action:
  - service:         notify.html5_notify
    data_template:
      message:       >-
        {{ states.sensor.date__time.state }}: Mi Mi has an error:
        {{ states.sensor.vacuum_cleaner_error_sensor.state }}
    data:
      data:
        actions:
          - action:  'vacuum_resume_cleaning'
            title:   'Resume Cleaning'
          - action:  'vacuum_stop_cleaning'
            title:   'Stop Cleaning'
        tag:         vacuum_notification

- id:                VacuumResumeCleaningActionClicked
  alias:             'Vacuum Resume Cleaning Action Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_resume_cleaning
  action:
  - service:         vacuum.start_pause
    entity_id:       vacuum.xiaomi_vacuum_cleaner
