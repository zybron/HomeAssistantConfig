- id:                DailyVacuumStart
  alias:             'Daily Vacuum Start'
  initial_state:     on
  trigger:
  - platform:        time
    at:              '11:00:00'
  action:
    - service:       vacuum.turn_on
      entity_id:     vacuum.xiaomi_vacuum_cleaner

- id:                VacuumStartNotification
  alias:             'Vacuum Start Notification'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       vacuum.xiaomi_vacuum_cleaner
    to:              'on'
  action:
  - service:         input_number.set_value
    data_template:
      entity_id:     input_number.vacuum_start_time
      value:         '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
  - service:         script.store_message
    data:
      message:       'Mi Mi has started cleaning.'
      topic:         'notification'
  - service:         notify.html5_notify
    data_template:
      message:      '{{ states.sensor.date__time.state }}: Mi Mi has started cleaning.'
    data:
      data:
        actions:
          - action:  'vacuum_stop_cleaning'
            title:   'Stop Cleaning'
        tag:         vacuum_start_notification

- id:                VacuumStopCleaningActionClicked
  alias:             'Vacuum Stop Cleaning Action Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_stop_cleaning
  action:
  - service:         vacuum.turn_off
    entity_id:       vacuum.xiaomi_vacuum_cleaner

- id:                VacuumStopNotification
  alias:             'Vacuum Stop Notification'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       vacuum.xiaomi_vacuum_cleaner
    to:              'off'
  action:
  - service:         input_number.set_value
    data_template:
      entity_id:     input_number.vacuum_end_time
      value:         '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
  - service:         input_number.set_value
    data_template:
      entity_id:     input_number.vacuum_sensor_timer
      value:         >-
        {% if (states.input_number.vacuum_sensor_timer - (states.input_number.vacuum_end_time - states.input_number.vacuum_start_time)/ 60) > 0 %}
          {{ states.input_number.vacuum_sensor_timer - (states.input_number.vacuum_end_time - states.input_number.vacuum_start_time)/ 60 }}
        {% else %}
          0
        {% endif %}
  - service:         script.store_message
    data:
      message:       'Mi Mi has stopped cleaning.'
      topic:         'notification'
  - service:         notify.html5_notify
    data_template:
      message:                '{{ states.sensor.date__time.state }}: Mi Mi has stopped cleaning.'
    data:
      data:
        tag:         vacuum__stop_notification

- id:                VacuumErrorNotification
  alias:             'Vacuum Error Notification'
  initial_state:     on
  trigger:
  - platform:        template
    value_template:  >-
      {% if is_state('sensor.vacuum_cleaner_error_sensor', 'No Error') %}
        false
      {% else %}
        True
      {% endif %}
  condition:
    condition:       template
    value_template:  >-
      {% if is_state('sensor.vacuum_cleaner_error_sensor','Clean main brush') %}
        false
      {% else %}
        true
      {% endif %}
  action:
  - service:         script.store_message
    data_template:
      message:       >-
        Mi Mi has an error:
        {{ states.sensor.vacuum_cleaner_error_sensor.state }}
      topic:         'notification'
  - service:         notify.html5_notify
    data_template:
      message:       >-
        {{ states.sensor.date__time.state }}: Mi Mi has an error:
        {{ states.sensor.vacuum_cleaner_error_sensor.state }}
    data:
      data:
        actions:
          - action:  'vacuum_resume_cleaning'
            title:   'Resume Cleaning'
          - action:  'vacuum_locate'
            title:   'Locate'
        tag:         vacuum_error_notification

- id:                FirstVacuumCleanBrushError
  alias:             'First Vacuum Clean Brush Error'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       sensor.vacuum_cleaner_error_sensor
    to:              Clean main brush
  condition:
    condition:       numeric_state
    entity_id:       input_number.vacuum_error_count
    below:           1
  action:
  - service:         timer.start
    data:
      entity_id:     timer.vacuum_error_timer
  - service:         input_number.increment
    entity_id:       input_number.vacuum_error_count
  - service:         vacuum.start_pause
    entity_id:       vacuum.xiaomi_vacuum_cleaner

- id:                SecondVacuumCleanBrushError
  alias:             'Second Vacuum Clean Brush Error'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       sensor.vacuum_cleaner_error_sensor
    to:              Clean main brush
  condition:
    condition:       numeric_state
    entity_id:       input_number.vacuum_error_count
    above:           0
    below:           3
  action:
  - service:         input_number.increment
    entity_id:       input_number.vacuum_error_count
  - service:         vacuum.start_pause
    entity_id:       vacuum.xiaomi_vacuum_cleaner

- id:                FinalVacuumCleanBrushError
  alias:             'Final Vacuum Clean Brush Error'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       sensor.vacuum_cleaner_error_sensor
    to:              Clean main brush
  condition:
    condition:       numeric_state
    entity_id:       input_number.vacuum_error_count
    above:           2
    below:           4
  action:
  - service:         timer.cancel
    entity_id:       timer.vacuum_error_timer
  - service:         script.store_message
    data_template:
      message:       >-
        Mi Mi has an error:
        {{ states.sensor.vacuum_cleaner_error_sensor.state }}
      topic:         'notification'
  - service:         notify.html5_notify
    data_template:
      message:       >-
        {{ states.sensor.date__time.state }}: Mi Mi has an error:
        {{ states.sensor.vacuum_cleaner_error_sensor.state }}
    data:
      data:
        actions:
          - action:  'vacuum_resume_cleaning'
            title:   'Resume Cleaning'
          - action:  'vacuum_locate'
            title:   'Locate'
        tag:         vacuum_error_notification

- id:                VacuumErrorTimerEnds
  alias:             'VacuumErrorTimerEnds'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      timer.finished
    event_data:
      entity_id:     timer.vacuum_error_timer
  action:
  - service:         input_number.set_value
    data:
      entity_id:     input_number.vacuum_error_count
      value:         0

- id:                VacuumResumeCleaningActionClicked
  alias:             'Vacuum Resume Cleaning Action Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_resume_cleaning
  action:
  - service:         vacuum.start_pause
    entity_id:       vacuum.xiaomi_vacuum_cleaner

- id:                VacuumLocateActionClicked
  alias:             'Vacuum Locate Action Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_locate
  action:
  - service:         vacuum.locate
    entity_id:       vacuum.xiaomi_vacuum_cleaner
  - service:         script.store_message
    data_template:
      message:       'Locate Mi Mi triggered'
      topic:         'notification'
  - service:         notify.html5_notify
    data:
      message:       'Locate Mi Mi triggered'
      data:
        actions:
          - action:  'vacuum_resume_cleaning'
            title:   'Resume Cleaning'
          - action:  'vacuum_locate'
            title:   'Locate'
        tag:         vacuum_location_notification

- id:                ResetVacuumSensorTimer
  alias:             'Reset Vacuum Sensor Timer'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       input_boolean.vacuum_sensor_timer_reset
    to:              'on'
  action:
  - service:         input_boolean.turn_off
    entity_id:       input_boolean.vacuum_sensor_timer_reset
  - service:         vacuum.send_command
    data:
      entity_id:     vacuum.xiaomi_vacuum_cleaner
      command:       reset_consumable
      params:        sensor_dirty_time
  - service:         input_number.set_value
    data:
      entity_id:     input_number.vacuum_sensor_timer
      value:         30

- id:                CleanSensorNotification
  alias:             'Clean Vacuum Sensors Notification'
  initial_state:     on
  trigger:
  - platform:        numeric_state
    entity_id:       sensor.vacuum_sensor_timer
    below:           0
  action:
  - service:         script.store_message
    data_template:
      message:       "Time to clean Mi Mi's sensors"
      topic:         'notification'
  - service:         notify.html5_notify
    data:
      message:       "Time to clean Mi Mi's sensors"
      data:
        actions:
          - action:  'vacuum_reset_timer'
            title:   'Reset Timer'
        tag:         vacuum_timer_notification

- id:                ResetVacuumSensorTimerNotificationClicked
  alias:             'Reset Vacuum Sensor Timer Notification Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_reset_timer
  action:
  - service:         input_boolean.turn_on
    entity_id:       input_boolean.vacuum_sensor_timer_reset

- id:                ResetVacuumMainBrushTime
  alias:             'Reset Vacuum Main Brush Time'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       input_boolean.vacuum_main_brush_reset
    to:              'on'
  action:
  - service:         vacuum.send_command
    data:
      entity_id:     vacuum.xiaomi_vacuum_cleaner
      command:       reset_consumable
      params:        main_brush_work_time
  - service:         input_boolean.turn_off
    entity_id:       input_boolean.vacuum_main_brush_reset

- id:                ResetVacuumSideBrushTime
  alias:             'Reset Vacuum Side Brush Time'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       input_boolean.vacuum_side_brush_reset
    to:              'on'
  action:
  - service:         vacuum.send_command
    data:
      entity_id:     vacuum.xiaomi_vacuum_cleaner
      command:       reset_consumable
      params:        side_brush_work_time
  - service:         input_boolean.turn_off
    entity_id:       input_boolean.vacuum_side_brush_reset

- id:                ResetVacuumFilterTime
  alias:             'Reset Vacuum Filter Time'
  initial_state:     on
  trigger:
  - platform:        state
    entity_id:       input_boolean.vacuum_filter_reset
    to:              'on'
  action:
  - service:         vacuum.send_command
    data:
      entity_id:     vacuum.xiaomi_vacuum_cleaner
      command:       reset_consumable
      params:        filter_work_time
  - service:         input_boolean.turn_off
    entity_id:       input_boolean.vacuum_filter_reset

- id:                ReplaceMainBrushNotification
  alias:             'Replace Main Brush Notification'
  initial_state:     on
  trigger:
  - platform:        template
    value_template:  "{% if is_state_attr('vacuum.xiaomi_vacuum_cleaner','main_brush_left',0) %} True {% endif %}"
  action:
  - service:         script.store_message
    data_template:
      message:       "Time to replace Mi Mi's main brush"
      topic:         'notification'
  - service:         notify.html5_notify
    data:
      message:       "Time to replace Mi Mi's main brush"
      data:
        actions:
          - action:  'vacuum_reset_main_brush_timer'
            title:   'Reset Timer'
        tag:         vacuum_timer_notification

- id:                ResetVacuumMainBrushTimerNotificationClicked
  alias:             'Reset Vacuum Main Brush Notification Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_reset_main_brush_timer
  action:
  - service:         input_boolean.turn_on
    entity_id:       input_boolean.vacuum_main_brush_reset

- id:                ReplaceSideBrushNotification
  alias:             'Replace Side Brush Notification'
  initial_state:     on
  trigger:
  - platform:        template
    value_template:  "{% if is_state_attr('vacuum.xiaomi_vacuum_cleaner','side_brush_left',0) %} True {% endif %}"
  action:
  - service:         script.store_message
    data_template:
      message:       "Time to replace Mi Mi's side brush"
      topic:         'notification'
  - service:         notify.html5_notify
    data:
      message:       "Time to replace Mi Mi's side brush"
      data:
        actions:
          - action:  'vacuum_reset_side_brush_timer'
            title:   'Reset Timer'
        tag:         vacuum_timer_notification

- id:                ResetVacuumSideBrushTimerNotificationClicked
  alias:             'Reset Vacuum Side Brush Notification Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_reset_side_brush_timer
  action:
  - service:         input_boolean.turn_on
    entity_id:       input_boolean.vacuum_side_brush_reset

- id:                ReplaceFilterNotification
  alias:             'Replace Filter Notification'
  initial_state:     on
  trigger:
  - platform:        template
    value_template:  "{% if is_state_attr('vacuum.xiaomi_vacuum_cleaner','filter_left',0) %} True {% endif %}"
  action:
  - service:         script.store_message
    data_template:
      message:       "Time to replace Mi Mi's filter"
      topic:         'notification'
  - service:         notify.html5_notify
    data:
      message:       "Time to replace Mi Mi's filter"
      data:
        actions:
          - action:  'vacuum_reset_filter_timer'
            title:   'Reset Timer'
        tag:         vacuum_timer_notification

- id:                ResetVacuumFilterTimerNotificationClicked
  alias:             'Reset Vacuum Filter Notification Clicked'
  initial_state:     on
  trigger:
  - platform:        event
    event_type:      html5_notification.clicked
    event_data:
      action:        vacuum_reset_filter_timer
  action:
  - service:         input_boolean.turn_on
    entity_id:       input_boolean.vacuum_filter_reset
