cover:
  - platform:               mqtt
    name:                   "Garage Door"
    command_topic:          "garadget/garage/command"
    state_topic:            "garadget/garage/status"
    payload_open:           "open"
    payload_close:          "close"
    payload_stop:           "stop"
    value_template:         "{{ value_json.status }}"

input_boolean:
  hold_garage_open:
    name: 'Hold Garage Door Open'

sensor:
  - platform:               mqtt
    name:                   'Garage Door'
    state_topic:            'garadget/garage/status'
    value_template:         '{{ value_json.status }}'
  - platform:               mqtt
    name:                   'Garage Brightness'
    state_topic:            'garadget/garage/status'
    unit_of_measurement:    '%'
    value_template:         '{{ value_json.bright }}'
  - platform:               mqtt
    name:                   'Garage Door Sensor'
    state_topic:            'garadget/garage/status'
    unit_of_measurement:    '%'
    value_template:         '{{ value_json.sensor }}'
  - platform:               mqtt
    name:                   'Garagdet Connection'
    state_topic:            'garadget/garage/status'
    unit_of_measurement:    'dB'
    device_class: signal_strength
    value_template:         '{{ value_json.signal }}'
  - platform:               template
    sensors:
      garage_door_changed:
        friendly_name:      'Garage Door Changed'
        value_template:     '{{ as_timestamp(states.sensor.garage_door.last_updated) | timestamp_custom("%m-%d-%Y %H:%M:%S", true) }}'
        device_class: timestamp

automation:
  - alias:                  'Update Garage Brightness'
    initial_state:          on
    trigger:
      platform:             time_pattern
      minutes:              '/2'
      seconds:              0
    action:
      service:              mqtt.publish
      data:
        topic:              "garadget/garage/command"
        payload:            "get-status"

  # - alias:                  'Auto Close Garage Door'
  #   initial_state:          on
  #   trigger:
  #     platform:             state
  #     entity_id:            sensor.garage_door
  #     to:                   'open'
  #     for:
  #       minutes:            7
  #   condition:
  #   - condition:            state
  #     entity_id:            'input_boolean.hold_garage_open'
  #     state:                'off'
  #   action:
  #   - service:              cover.close_cover
  #     entity_id:            'cover.garage_door'

# Notifications
  # - id:                     GarageDoorLeftOpen
  #   alias:                  "Garage Door Left Open"
  #   initial_state:          on
  #   trigger:
  #   - platform:             state
  #     entity_id:            sensor.garage_door
  #     to:                   open
  #     for:
  #       minutes:            5
  #   condition:
  #   - condition:            state
  #     entity_id:            'input_boolean.hold_garage_open'
  #     state:                'off'
  #   action:
  #   - service:              script.speech_processing
  #     data_template:
  #       speech_message:     'The garage door was left open.'
  #   - service:              script.store_message
  #     data:
  #       message:            'The garage door was left open.'
  #       topic:              'notification'
  #   - service: notify.telegram_nathan
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door was left open.'
  #       data:
  #         inline_keyboard:
  #           - 'Close:/do_garage_close'
  #   - service: notify.telegram_erin
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door was left open.'
  #       data:
  #         inline_keyboard:
  #           - 'Close:/do_garage_close'

  # - id:                     GarageDoorOpen
  #   alias:                  "Garage Door Open"
  #   initial_state:          on
  #   trigger:
  #   - platform:             state
  #     entity_id:            sensor.garage_door
  #     to:                   open
  #   action:
  #   - service:              script.speech_processing
  #     data_template:
  #       speech_message:     'The garage door is open.'
  #   - service:              script.store_message
  #     data:
  #       message:            'The garage door is open.'
  #       topic:              'notification'
  #   - service: notify.telegram_nathan
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door is open.'
  #       data:
  #         inline_keyboard:
  #           - 'Close:/do_garage_close'
  #   - service: notify.telegram_erin
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door is open.'
  #       data:
  #         inline_keyboard:
  #           - 'Close:/do_garage_close'

  # - id:                     GarageDoorClosed
  #   alias:                  "Garage Door Closed"
  #   initial_state:          on
  #   trigger:
  #   - platform:             state
  #     entity_id:            sensor.garage_door
  #     to:                   closed
  #   action:
  #   - service:              script.speech_processing
  #     data_template:
  #       speech_message:     'The garage door is closed.'
  #   - service: notify.telegram_nathan
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door is closed.'
  #       data:
  #         inline_keyboard:
  #           - 'Open:/do_garage_open'
  #   - service: notify.telegram_erin
  #     data:
  #       title: 'Garage Door'
  #       message: 'The garage door is closed.'
  #       data:
  #         inline_keyboard:
  #           - 'Open:/do_garage_open'

  - id:                     CloseGarageDoorClicked
    alias:                  "Close Garage Door Clicked"
    initial_state:          on
    trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_garage_close'
    action:
    - service:              cover.close_cover
      entity_id:            'cover.garage_door'
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Closing garage door.'

  - id:                     OpenGarageDoorClicked
    alias:                  "Open Garage Door Clicked"
    initial_state:          on
    trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/do_garage_open'
    action:
    - service:              cover.open_cover
      entity_id:            'cover.garage_door'
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Opening garage door.'
